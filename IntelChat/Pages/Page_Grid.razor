@page "/Grid"
@inject NnetDbContext db
@inject NavigationManager _nav
@inject IConfiguration _config
@inject EntityService _entities;
@layout CustomLayout
@using IntelChat.Models;
@using System.Data.SqlClient;
@using System.Data;
@using ThreadingTask = System.Threading.Tasks.Task;
@using Microsoft.AspNetCore.Components.QuickGrid;
@using System.Reflection;
@using IntelChat.Services;

<!-- ************************************************************************************ -->
<!-- ********************************* POD - PID **************************************** -->
<!-- ************************************************************************************ -->

<p style="position:absolute;top:030px;left:20px;font-size:22px;opacity:20%;color:seashell">POD: @pod</p>
<p style="position:absolute;top:060px;left:20px;font-size:22px;opacity:20%;color:seashell">PID: @pid</p>

<style>
	body {
		background: #000000 url("https://agineuralnet.blob.core.windows.net/background/BG_Grid.png") no-repeat fixed left top;
		background-size: 1920px 1080px;
	}
	.table-divider tbody tr {
		border-bottom: 1px solid #ccc;
	}
	.table-header {
		color: white;
	}
	#grid-container {
		background-color: #BBBBBB;
		display: inline-block;
		border-radius: 12px;
		padding: 20px;
		margin-bottom: 20px;
		margin-top: 120px;
	}
	input[type=text] {
		border: 1px solid #cccccc;
		border-radius: 5px;
	}
	select {
		margin-right: 20px;
		border: 1px solid #cccccc;
		border-radius: 5px;
	}
</style>

<!-- ************************************************************************************ -->
<!-- ************************************** EXIT **************************************** -->
<!-- ************************************************************************************ -->

<button class="general-menu-button" @onclick="@(()=>_nav.NavigateTo("/"+entity+"?pod="+pod+"&pid="+pid))"
		style="position:absolute;top:30px;left:1400px;height:80px;border:0px;width:200px;">
	EXIT
</button>

<div id="grid-container">
<select @onchange="DisplayTable">
	<option value="-">-</option>
	@foreach (var filter in filters)
	{
		if(entity == null)
		{
			<option value="@filter">@filter</option>
		}
		else
		{
			<option value="@entity">@entity</option>
			break;
		}
	}
</select>

	<!-- ************************************************************************************ -->
	<!-- ************************** Prompt for PYPE-TYPE Filter ***************************** -->
	<!-- ************************************************************************************ -->
@if(hasType)
{
	<input @bind=typeFilter type="text" maxlength="4" placeholder="TYPE filter using" />
}
@if(loading)
{
	<p>Loading...</p>
}

@if (@table == "Answer")
{
	<QuickGrid Items="@answers.AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.PersonId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.QuestionId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.AnswerResponse)" Sortable="true" />
		<PropertyColumn Property="@(p => p.AnswerSeverity)" Sortable="true" />
		<PropertyColumn Property="@(p => p.AnswerDtOrgin)" Sortable="true" />
		<PropertyColumn Property="@(p => p.AnswerDtRevision)" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Brand")
{
	<QuickGrid Items="@brands.AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.BrandId)" Title="Brand" Sortable="true" />
        <PropertyColumn Property="@(p => p.BrandRole)" Title="Role" Sortable="true" />
		<PropertyColumn Property="@(p => p.BrandCode)" Title="Invitation" Sortable="true" />
        <PropertyColumn Property="@(p => p.BrandGuide)" Title="POD" Sortable="true" />
        <PropertyColumn Property="@(p => p.ProgramFk)" Title="Program" Sortable="true" />
        <PropertyColumn Property="@(p => p.BrandLabel)" Title="Label" Sortable="true" />
        <PropertyColumn Property="@(p => p.BrandStatus)" Title="status" Sortable="true" />
        <PropertyColumn Property="@(p => p.BrandRegDateClosed)" Title="Close" Sortable="true" />
		<PropertyColumn Property="@(p => p.BrandCntMax)" Title="Max" Sortable="true" />
		<PropertyColumn Property="@(p => p.BrandCntReg)" Title="Count" Sortable="true" />
		<PropertyColumn Property="@(p => p.BrandCost)" Title="Cost"Sortable="true" />
			<PropertyColumn Property="@(p => p.LocationIdFk)" Title="Location" Sortable="true" />
		<PropertyColumn Property="@(p => p.ChannelAlpha)" Title="Alpha" />
		<PropertyColumn Property="@(p => p.ChannelBeta)" Title="Beta"  />
		<PropertyColumn Property="@(p => p.ChannelGamma)" Title="Gamma"  />
        <PropertyColumn Property="@(p => p.NovaIdFk)" Title="NOVA" />
			<PropertyColumn Property="@(p => p.BrandEligibility)" Title="who" />
        <PropertyColumn Property="@(p => p.BrandImage)" Title="Image" />
	</QuickGrid>
}

@if (@table == "Guide")
{
	<QuickGrid Items="@guides.FindAll(guide => typeFilter == "" || typeFilter != "" && guide.GuideType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.GuideId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuideLabel)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuidePurpose)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuideType)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuideStatus)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuideImage)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuideDtOrgin)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuideDtRevision)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.ProgramFk)" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Interview")
{
	<QuickGrid Items="@interviews.AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.GuideId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.QuestionId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.InterviewSeq)" Sortable="true" />
		<PropertyColumn Property="@(p => p.InterviewStatus)" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Location")
{
	<QuickGrid Items="@locations.FindAll(location => typeFilter == "" || typeFilter != "" && location.LocationType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
			<PropertyColumn Property="@(p => p.LocationId)" Title="Loc" Sortable="true" />
            <PropertyColumn Property="@(p => p.LocationType)" Title="Type" Sortable="true" />
			<PropertyColumn Property="@(p => p.LocationLabel16)" Title="Label" Sortable="true" />
			<PropertyColumn Property="@(p => p.LocationStatus)" Title="Status" Sortable="true" />
			<PropertyColumn Property="@(p => p.LocationDesc)" Title="Description" Sortable="true" />
			<PropertyColumn Property="@(p => p.LocationTimeZone)" Title="T-Zone" Sortable="true" />
			<PropertyColumn Property="@(p => p.Latitude)" Title="Latitude"  Sortable="true" />
			<PropertyColumn Property="@(p => p.Longitude)" Title="Longitude" Sortable="true" />
			<PropertyColumn Property="@(p => p.BrainFk)" Title="Brain" Sortable="true" />
            <PropertyColumn Property="@(p => p.ProgramFk)" Title="Program" Sortable="true" />
			<PropertyColumn Property="@(p => p.PodFk)" Title="POD"  Sortable="true" />
			<PropertyColumn Property="@(p => p.PersonFkAdmn)" Title="admn"  Sortable="true" />
			<PropertyColumn Property="@(p => p.PersonFkEngr)" Title="engr" Sortable="true" />
			<PropertyColumn Property="@(p => p.PersonFkXprt)" Title="xprt"  Sortable="true" />
            <PropertyColumn Property="@(p => p.LocationStorage)" Title="Storage" Sortable="true" />
            <PropertyColumn Property="@(p => p.LocationPng)" Title="Image" Sortable="true" />
            <PropertyColumn Property="@(p => p.LocationFinder)" Title="Finder" Sortable="true" />
            <PropertyColumn Property="@(p => p.LicenseFk)" Title="License" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Memo")
{
	<QuickGrid Items="@memos.FindAll(memo => typeFilter == "" || typeFilter != "" && memo.MemoType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.MemoPersonTo)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoPersonFrom)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoDateTime)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoPriority)" Sortable="true" />
		<PropertyColumn Property="@(p => p.GuideIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoNova)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoChannel)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoType)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoStatus)" Sortable="true" />
		<PropertyColumn Property="@(p => p.MemoMessage)" Sortable="true" />
	</QuickGrid>
}

@if(@table == "Noun")
{
	<QuickGrid Items="@nouns.FindAll(noun => typeFilter == "" || typeFilter != "" && noun.NounType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.NounId)"     Title="Noun"   Sortable="true" />
        <PropertyColumn Property="@(p => p.NounStatus)" Title="Status" Sortable="true" />
        <PropertyColumn Property="@(p => p.NounType)"   Title="Type"   Sortable="true" />
		<PropertyColumn Property="@(p => p.NounLabel)"  Title="Label"  Sortable="true" />
		<PropertyColumn Property="@(p => p.NounDescription)" Title="Description"  Sortable="true" />
		<PropertyColumn Property="@(p => p.UrlIdPk)"  Title="URL" Sortable="true" />
        <PropertyColumn Property="@(p => p.PodIdFk)"  Title="POD" Sortable="true" />
	</QuickGrid>
}




	<!-- ************************************************************************************ -->
	<!-- ******************* <PropertyColumn Property="@(p => p.NovaDescription)" />  ***************************** -->
	<!-- ************************************************************************************ -->
@if(@table == "NOVA")
{
	<QuickGrid Items="@novas.FindAll(nova => typeFilter == "" || typeFilter != "" && nova.NovaType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.NovaId)" Sortable="true" />
	  	<PropertyColumn Property="@(p => p.NovaDescription)" /> 
		<PropertyColumn Property="@(p => p.NovaType)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaStatus)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaChannel)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaSubject)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaAction)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaObject)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaDatetime)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PodIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaPrioriy)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaLabel)" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Person")
{
	<QuickGrid Items="@persons.FindAll(person => typeFilter == "" || typeFilter != "" && person.PersonPypeDdMyme == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.PersonId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonFirst)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonLast)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonLabel)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonPypeDdMyme)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonStatus)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonPypeDdRole)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonDatetime)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PodIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.LocationIdFk)" Sortable="true" />
	</QuickGrid>
}

@if (@table == "POD")
{
	<QuickGrid Items="@pods.FindAll(pod => typeFilter == "" || typeFilter != "" && pod.PodType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
			<PropertyColumn Property="@(p => p.PodId)" Sortable="true" Title="Pod#" />
            <PropertyColumn Property="@(p => p.PodType)" Sortable="true" Title="PYPE" />
			<PropertyColumn Property="@(p => p.PodLabel)" Sortable="true" Title="Label" />
            <PropertyColumn Property="@(p => p.PodStatus)" Sortable="true" Title="Status" />
		    <PropertyColumn Property="@(p => p.PodDescription)"  Title="Descriptions" />
            <PropertyColumn Property="@(p => p.PersonIdFk)" Sortable="true" Title="Pid#" />
            <PropertyColumn Property="@(p => p.LocationIdFk)" Sortable="true" Title="Location" />
		    <PropertyColumn Property="@(p => p.PodPypeDdChan)"     Sortable="true" Title="Channel" />
		    <PropertyColumn Property="@(p => p.PodImage)"      Title="URL" />
			<PropertyColumn Property="@(p => p.NovaIdFk)" Sortable="true" Title="NOVA" />
	</QuickGrid>
}

@if (@table == "Pype")
{
	<QuickGrid Items="@pypes.FindAll(pype => typeFilter == "" || typeFilter != "" && pype.PypeType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">

            <PropertyColumn Property="@(p => p.PodIdFk)" Title="POD" Sortable="true" />

		<PropertyColumn Property="@(p => p.PypeId)" Title="Pype" Sortable="true" />
		<PropertyColumn Property="@(p => p.PypeType)" Title="Type" Sortable="true" />
		<PropertyColumn Property="@(p => p.PypeLabel)" Title="Label" Sortable="true" />
		<PropertyColumn Property="@(p => p.PypeDesc)" Title="Description" Sortable="true" />
		<PropertyColumn Property="@(p => p.PypeLink)" Title="Link" Sortable="true" />

            <PropertyColumn Property="@(p => p.PypeStatus)" Title="Status" Sortable="true" />

	</QuickGrid>
}

@if (@table == "Question")
{
	<QuickGrid Items="@questions.FindAll(question => typeFilter == "" || typeFilter != "" && question.QuestionType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.QuestionId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.QuestionText)" Sortable="true" />
		<PropertyColumn Property="@(p => p.QuestionType)" Sortable="true" />
		<PropertyColumn Property="@(p => p.QuestionStatus)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaIdFk)" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Registration")
{
	<QuickGrid Items="@registrations.AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.RegistrationId)" Title="Reg ID" Sortable="true" />
		<PropertyColumn Property="@(p => p.RegistrationUsername)" Title="User Name" Sortable="true" />
		<PropertyColumn Property="@(p => p.RegistrationPassword)" Title="Password" Sortable="true" />
		<PropertyColumn Property="@(p => p.RegistrationEmail)" Title="Email" Sortable="true" />
			<PropertyColumn Property="@(p => p.RegistrationStatus)" Title="Status" Sortable="true" />
			<PropertyColumn Property="@(p => p.PersonIdFk)" Title="Person FK" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Task")
{
	<QuickGrid Items="@tasks.FindAll(task => typeFilter == "" || typeFilter != "" && task.TaskType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.TaskId)" Title="Task" Sortable="true" />
        <PropertyColumn Property="@(p => p.TaskStatus)" Title="Status" Sortable="true" />
        <PropertyColumn Property="@(p => p.TaskType)" Title="Type" Sortable="true" />
        <PropertyColumn Property="@(p => p.NovaIdFk)" Title="NOVA" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskLabel32)" Title="Label" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskDescription)" Title="Description" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskStartDate)" Title="Start" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskFinishDate)" Title="Finish" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskDuration)" Title="Duration" Sortable="true" />
        <PropertyColumn Property="@(p => p.TaskPlatue)" Sortable="true" />
        <PropertyColumn Property="@(p => p.TaskPrevious)" Title="After" Sortable="true" />
        <PropertyColumn Property="@(p => p.TaskSeq)" Title="Seq" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskEntryDate)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NounIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PodIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskParent)" Sortable="true" />
	</QuickGrid>
}

@if (@table == "URL")
{
	<QuickGrid Items="@urls.FindAll(url => typeFilter == "" || typeFilter != "" && url.UrlType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.UrlId)"     Title="URL" Sortable="true" />
        <PropertyColumn Property="@(p => p.UrlStatus)" Title="Status" Sortable="true" />
		<PropertyColumn Property="@(p => p.UrlType)"   Title="Type" Sortable="true" />
		<PropertyColumn Property="@(p => p.UrlLabel)"  Title="Label" Sortable="true" />
		<PropertyColumn Property="@(p => p.UrlDescription)" Title="Description" Sortable="true" />
		<PropertyColumn Property="@(p => p.UrlCloud)"  Title="Storage Link" Sortable="true" />
	</QuickGrid>
}

@if (@table == "Verb")
{
	<QuickGrid Items="@verbs.FindAll(verb => typeFilter == "" || typeFilter != "" && verb.VerbType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
			<PropertyColumn Property="@(p => p.VerbId)"     Title="Verb"   Sortable="true" />
            <PropertyColumn Property="@(p => p.VerbStatus)" Title="Status" Sortable="true" />
			<PropertyColumn Property="@(p => p.VerbType)"   Title="Type"   Sortable="true" />
			<PropertyColumn Property="@(p => p.VerbLabel)"  Title="Label"  Sortable="true" />
			<PropertyColumn Property="@(p => p.VerbDescription)" Title="Description"  Sortable="true" />
			<PropertyColumn Property="@(p => p.UrlIdPk)"    Title="URL"  Sortable="true" />
            <PropertyColumn Property="@(p => p.PodIdFk)"    Title="POD"  Sortable="true" />
	</QuickGrid>
}

@if (@table == "Work")
{
	<QuickGrid Items="@works.FindAll(work => typeFilter == "" || typeFilter != "" && work.WorkType == typeFilter).AsQueryable()" Virtualize="true" class="table-divider">
		<PropertyColumn Property="@(p => p.WorkId)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkLabel32)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkType)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkStatus)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkLevel)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkDescription)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkDuration)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkStart)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkFinish)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkEntryData)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PersonIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.NovaIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.TaskIdFk)" Sortable="true" />
		<PropertyColumn Property="@(p => p.PodCounterWork)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkStartDate)" Sortable="true" />
		<PropertyColumn Property="@(p => p.WorkFinishDate)" Sortable="true" />
	</QuickGrid>
}
</div>