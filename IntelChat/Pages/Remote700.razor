@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;

@page "/Remote700"

<h3>Draggable Image Example</h3>

<button @onclick="OpenImage">Open Image</button>
<button @onclick="CloseImage">Close Image</button>

<div style="position: relative; height: 100%; width: 100%; border: none; z-index: 1000;">
    
    @if (isImageVisible)
    {
        <!-- Draggable Image -->
        <img src="https://www.kidsmathgamesonline.com/images/pictures/shapes/square.jpg" alt="Remote"
             style="position: absolute; top: @(imagePosition.Y)px; left: @(imagePosition.X)px;
                width: @(isInsideDropZone ? $"{resizedImageSize.Width}px" : $"{originalImageSize.Width}px");
                height: @(isInsideDropZone ? $"{resizedImageSize.Height}px" : $"{originalImageSize.Height}px");
                z-index: @(isInsideDropZone ? "1002" : "1000");
                cursor: @(isDragging ? "grabbing" : "grab"); user-drag: none; -webkit-user-drag: none;"
             @onmousedown="StartDragging"
             @onmouseup="StopDragging"
             @onmousemove="OnMouseMove" />
    }
   
    <!-- Droppable Area -->
    <div style="position: absolute; top: 400px; left: 400px; width: 150px; height: 150px;
            border: 2px dashed blue; cursor: pointer; z-index: @(isInsideDropZone ? "1000" : "1001");
            background-color: rgba(255, 255, 255, 0.5);"
         @onmouseup="StopDragging">
        <p style="text-align: center; line-height: 150px; pointer-events: none;">Drop Here</p>
    </div>
</div>



@*
@page "/drag-image"

<h3>Draggable Image Example</h3>

<button @onclick="OpenImage">Open Image</button>
<button @onclick="CloseImage">Close Image</button>

@if (isImageVisible)
{
    <div @onmousemove="OnMouseMove" style="position: relative; z-index: 1001; height: 800px; width: 100%; border: 1px solid black;">
        <img src="images/remote.png" alt="Remote"
             style="position: absolute; top: @(imagePosition.Y)px; left: @(imagePosition.X)px; width: 260px; height: 700px; cursor: move;"
             @onmousedown="StartDragging"
             @onmouseup="StopDragging" />
        <div>Position: X = @(imagePosition.X), Y = @(imagePosition.Y)</div>
    </div>
}

@code {
    private bool isImageVisible = false;
    private bool isDragging = false;
    private (int X, int Y) imagePosition = (100, 100);
    private (int X, int Y) mouseStart = (0, 0);

    private void OpenImage()
    {
        isImageVisible = true;
    }

    private void CloseImage()
    {
        isImageVisible = false;
    }

    private void StartDragging(MouseEventArgs e)
    {
        isDragging = true;
        mouseStart = ((int)e.ClientX, (int)e.ClientY);
    }

    private void StopDragging(MouseEventArgs e)
    {
        isDragging = false;
    }

    private void OnMouseMove(MouseEventArgs e)
    {
        if (isDragging)
        {
            var deltaX = (int)e.ClientX - mouseStart.X;
            var deltaY = (int)e.ClientY - mouseStart.Y;

            imagePosition = (imagePosition.X + deltaX, imagePosition.Y + deltaY);
            mouseStart = ((int)e.ClientX, (int)e.ClientY);
        }
    }
}
*@